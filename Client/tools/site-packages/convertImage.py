#-------------------------------------------------------------------------------
# Name:        convertImage
# Purpose:
#
# Author:      Deqiang.li
#
# Created:     14/11/2012
# Copyright:   (c) Deqiang.li 2012
# Licence:     <your licence>
#-------------------------------------------------------------------------------
#!/usr/bin/env python

import PIL
from PIL import Image
import os
import string
import sys

def GetCeilSize(m):
    init = 2
    while(init < m):
        init = init * 2
    value = init*1.0/m
    if (value > 1.9):
        print("Too waste!!!, cur size is %d, replaced by %d\n" % (m, init))
    return init

def OpenFile(fileName):
    im = Image.open(fileName)
    return im, im.size[0], im.size[1]

def NeedSkipFile(fileName, sampleFileName):
    desFileName = sampleFileName
    fileModifyTime = os.path.getmtime(fileName)
    pvrModifyTime = 0
    existPvr = os.path.exists(desFileName)
    if (existPvr):
        pvrModifyTime = os.path.getmtime(desFileName)
    if (pvrModifyTime > fileModifyTime):
        print("des file %s is newer, skip it" % desFileName)
        return True
    else:
        return False

def ProcessFile(fileName, sampleFileName, outFileName, archW, archH):
    if (NeedSkipFile(fileName, sampleFileName)):
        return
    im, w, h = OpenFile(fileName)
    newW = GetCeilSize(w)
    newH = GetCeilSize(h)
    if (newW > newH):
        newH = newW
    else:
        newW = newH
    newFile = Image.new('RGBA',(newW, newH))
    offX = (newW - w) * archW
    offY = (newH - h) * archH
    offX = "%d" % offX
    offY = "%d" % offY
    offX = string.atoi(offX)
    offY = string.atoi(offY)
    try:
        newFile.paste(im, (offX, offY, w + offX, h + offY))
        newFile.save(outFileName)
    except:
        print("Error when process %s" % fileName)

if __name__ == '__main__':
    i = len(sys.argv)
    if (i < 6):
        print("Wrong parameter, sample is : xx.py inImage.name sample.name outImage.name archX(0~1.0) archY(0~1.0)")
    ProcessFile(sys.argv[1], sys.argv[2], sys.argv[3], string.atof(sys.argv[4]), string.atof(sys.argv[5]))
